homeassistant:
  customize:
    sensor.launch_window:
      friendly_name: Next Launch Window Timestamp
      scan_interval: 10

sensor:
  - platform: rest
    resource: https://launchlibrary.net/1.2.2/launch/next/10
    name: launch window
    # if the current timestamp is in the launch window
    # this sensor will return the UTC timestamp of the launch
    value_template: >-
      {%- for launch in value_json.launches %}
        {% if launch.location.id == 16 %} 
          {# location id 16 is Florida other locations can be found via the api
            https://launchlibrary.net/1.2/location
           #}
          {% if strptime(launch.isostart, '%Y%m%dT%H%M%SZ').strftime('%Y-%m-%d') == now().strftime('%Y-%m-%d') %}
            {% set utc_offset_string = now().strftime('%z') %}
            {% set utc_offset_direction = utc_offset_string[:1] %}
            {% set utc_offset_hours = now().strftime('%z')[-4:] %}
            {% set utc_offset_seconds = (utc_offset_hours| int /100) * 60 * 60 %}

            {% if utc_offset_direction == '-' %}
             {{ launch.wsstamp + utc_offset_seconds}}
            {% else %}
              {{ launch.wsstamp - utc_offset_seconds}}
            {% endif %}
          {% endif %}
        {% endif %}
      {% endfor %}

automation:
  - id: launch_window_approaching
    alias: Launch Window Approaching
    trigger:
      - platform: state
        entity_id: sensor.launch_window
    action:
      - service: script.launch_alert

script:
  launch_alert:
    sequence:
      - condition: template
        value_template: "{{not is_state('sensor.launch_window', '')}}"
      - wait_template: >-
          {{now() >= sensor.launch_window}}
      - service: switch.turn_on
        entity_id: switch.office_light_switch